{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nimport { FetchCollectionSuccess, FetchCollectionFailure } from './ShopAction';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get(); //geting the snaphot of collection\n\n    const CollectionMap = yield call(ConverCollectionsSnapshotMap, snapShot);\n    yield put(FetchCollectionSuccess(CollectionMap)); //Dispatch methoid in saga\n  } catch (error) {\n    yield put(FetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeLatest","call","put","ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","snapShot","get","CollectionMap","error","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,SAASC,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,sBAAhC,QAA6D,cAA7D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAG;AAEC,UAAMC,aAAa,GAAEL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAHD,CAG6C;;AAC5C,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACE,4BAAD,EAA+BQ,QAA/B,CAAhC;AACA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,aAAD,CAAvB,CAAT,CALD,CAKoD;AACtD,GAND,CAOJ,OAAMC,KAAN,EAAY;AAER,UAAMZ,GAAG,CAACK,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAT;AAEC;AAGJ;AAED,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMhB,UAAU,CAACK,eAAe,CAACY,sBAAjB,EAAyCT,oBAAzC,CAAhB;AACJ","sourcesContent":["import {takeLatest ,call, put} from 'redux-saga/effects'\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\nimport {FetchCollectionSuccess, FetchCollectionFailure} from './ShopAction'\n\n\nexport function* fetchCollectionAsync(){\n\n    try{\n\n        const collectionRef =firestore.collection('collections');\n        const snapShot = yield collectionRef.get()  //geting the snaphot of collection\n        const CollectionMap = yield call(ConverCollectionsSnapshotMap, snapShot )\n        yield put(FetchCollectionSuccess(CollectionMap));  //Dispatch methoid in saga\n    }\ncatch(error){\n\n    yield put(FetchCollectionFailure(error.message))\n\n    }\n  \n\n}\n\nexport function* fetchCollectionStart(){\n     yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}