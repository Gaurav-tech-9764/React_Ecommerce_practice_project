{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-In/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport react, { Component, useState } from \"react\";\nimport CustomeButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport \"./SignIn.Styles.scss\";\nimport { connect } from \"react-redux\";\nimport { EmailSignInStart, GoogleSignInStart } from \"../../redux/User/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  EmailSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setuserCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handelSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    EmailSignInStart(email, password);\n  };\n\n  const handelChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInToStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handelSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        label: \"email\",\n        type: \"email\",\n        handelChange: this.handelChange,\n        value: this.state.email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        label: \"password\",\n        type: \"password\",\n        handelChange: this.handelChange,\n        value: this.state.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(CustomeButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomeButton, {\n          type: \"button\",\n          onClick: googleSignInToStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"bQm3KsHGo61XOAyl8ooPiz81RmM=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInToStart: () => dispatch(GoogleSignInStart()),\n  EmailSignInStart: (email, password) => dispatch(EmailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-In/SignIn.js"],"names":["react","Component","useState","CustomeButton","FormInput","connect","EmailSignInStart","GoogleSignInStart","SignIn","userCredentials","setuserCredentials","email","password","handelSubmit","event","preventDefault","state","handelChange","value","name","target","setState","googleSignInToStart","props","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAmD,6BAAnD;;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAsB;AAAA;;AAChC,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAuCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAD,CAArD;;AAIA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAc;AAEhCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoB,KAAKI,KAA/B;AAEAV,IAAAA,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAhB;AAEH,GARA;;AASD,QAAOK,YAAY,GAAIH,KAAD,IAAW;AAC7B,UAAM;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBL,KAAK,CAACM,MAA5B;AAEA,SAAKC,QAAL,CAAc;AAAC,OAACF,IAAD,GAAOD;AAAR,KAAd;AACH,GAJD;;AAMI,QAAM;AAACI,IAAAA;AAAD,MAAwB,KAAKC,KAAnC;AACA,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAC,OAA9B;AAAsC,QAAA,IAAI,EAAC,OAA3C;AAAmD,QAAA,YAAY,EAAE,KAAKI,YAAtE;AAAoF,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,KAAtG;AAA6G,QAAA,QAAQ;AAArH;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,UAAjC;AAA4C,QAAA,IAAI,EAAC,UAAjD;AAA4D,QAAA,YAAY,EAAE,KAAKM,YAA/E;AAA6F,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWJ,QAA/G;AAAyH,QAAA,QAAQ;AAAjI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCAEA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAIA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,QAApB;AAA6B,UAAA,OAAO,EAAEU,mBAAtC;AAA2D,UAAA,cAAc,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBP,CA9CD;;GAAMd,M;;KAAAA,M;;AAgDN,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCH,EAAAA,mBAAmB,EAAE,MAAMG,QAAQ,CAAClB,iBAAiB,EAAlB,CADC;AAEpCD,EAAAA,gBAAgB,EAAC,CAACK,KAAD,EAAQC,QAAR,KAAoBa,QAAQ,CAACnB,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFT,CAAL,CAAnC;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAmChB,MAAnC,CAAf","sourcesContent":["import react, { Component, useState } from \"react\";\nimport CustomeButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport \"./SignIn.Styles.scss\";\nimport { connect } from \"react-redux\";\nimport { EmailSignInStart, GoogleSignInStart} from \"../../redux/User/UserAction\";\n\n\n\nconst SignIn = ({EmailSignInStart})=>{\n     const [userCredentials, setuserCredentials] =useState({email:\"\", password:\"\"}) \n     \n    \n\n     const handelSubmit = async event =>{\n     \n        event.preventDefault();\n  \n        const {email, password} = this.state;\n\n        EmailSignInStart(email, password)\n       \n    }\n    const  handelChange = (event) => {\n        const {value, name} = event.target;\n\n        this.setState({[name]:value});\n    }\n\n        const {googleSignInToStart} = this.props\n        return(\n\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handelSubmit}>\n                    <FormInput name=\"email\" label=\"email\" type=\"email\" handelChange={this.handelChange} value={this.state.email} required/>\n                   \n                    <FormInput name=\"password\" label=\"password\" type=\"password\" handelChange={this.handelChange} value={this.state.password} required/>\n                \n                    <div className=\"button\">\n\n                    <CustomeButton type=\"submit\">Sign In</CustomeButton>\n                    \n                    <CustomeButton type=\"button\" onClick={googleSignInToStart} isGoogleSignIn>Sign In With Google</CustomeButton>\n\n\n                    </div>\n                </form>\n            </div>\n\n        )\n\n\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInToStart: () => dispatch(GoogleSignInStart()),\n    EmailSignInStart:(email, password)=> dispatch(EmailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps) (SignIn)"]},"metadata":{},"sourceType":"module"}