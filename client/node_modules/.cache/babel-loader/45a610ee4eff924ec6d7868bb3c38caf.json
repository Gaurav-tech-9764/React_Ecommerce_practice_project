{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/React_training/React_practice/clothing-ecommerce/src/pages/Shop/Shop.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionOverView from \"../../Components/Collection-Overview/CollectionOverView\";\nimport CollectionPage from \"../Collection/CollectionPage\";\nimport SelectIsCollectionFetching from \"../../redux/Shop-redux/ShopSelector\";\nimport { firestore, ConverCollectionsSnapshotMap } from \"../../FireBase/Firebase-util\";\nimport { connect } from \"react-redux\";\nimport { FetchCollectionStartAsync } from \"../../redux/Shop-redux/ShopAction\";\nimport Spinner from \"../../Components/Spinner-Component/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverViewWithSpinner = Spinner(CollectionOverView);\n_c = CollectionOverViewWithSpinner;\nconst CollectionPageWithSpinner = Spinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends Component {\n  componentDidMount() {\n    const {\n      FetchCollectionStartAsync\n    } = this.props;\n    FetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isCollectionFetching\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverViewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: SelectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  FetchCollectionStartAsync: () => dispatch(FetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverViewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/pages/Shop/Shop.js"],"names":["React","Component","Route","createStructuredSelector","CollectionOverView","CollectionPage","SelectIsCollectionFetching","firestore","ConverCollectionsSnapshotMap","connect","FetchCollectionStartAsync","Spinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","Shop","componentDidMount","props","render","match","isCollectionFetching","state","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,0BAAP,MAAuC,qCAAvC;AACA,SAASC,SAAT,EAAoBC,4BAApB,QAAwD,8BAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,yBAAT,QAA0C,mCAA1C;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAGA,MAAMC,6BAA6B,GAAGD,OAAO,CAACP,kBAAD,CAA7C;KAAMQ,6B;AACN,MAAMC,yBAAyB,GAAGF,OAAO,CAACN,cAAD,CAAzC;MAAMQ,yB;;AAGN,MAAOC,IAAP,SAAoBb,SAApB,CAA8B;AAG5Bc,EAAAA,iBAAiB,GAAE;AACrB,UAAM;AAACL,MAAAA;AAAD,QAA8B,KAAKM,KAAzC;AAEAN,IAAAA,yBAAyB;AAEtB;;AAGFO,EAAAA,MAAM,GAAE;AACT,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKF,KAArB;AACA,UAAM;AAACG,MAAAA;AAAD,QAAyB,KAAKC,KAApC;AAEE,wBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEG,oBAA1C;AAAA,aAAmEH;AAAnE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGL,KAAD,iBAAS,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAA+DH;AAA/D;AAAA;AAAA;AAAA;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAQA;;AAvB4B;;AA2B9B,MAAMM,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CgB,EAAAA,oBAAoB,EAAEb;AADyB,CAAD,CAAhD;;AAIA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAI;AACrCd,EAAAA,yBAAyB,EAAE,MAAKc,QAAQ,CAACd,yBAAyB,EAA1B;AADH,CAAJ,CAAnC;;AASA,eAAeD,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA8CT,IAA9C,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport  {Route}  from \"react-router\"\nimport { createStructuredSelector } from \"reselect\"\nimport CollectionOverView from \"../../Components/Collection-Overview/CollectionOverView\"\nimport CollectionPage from \"../Collection/CollectionPage\"\nimport SelectIsCollectionFetching from \"../../redux/Shop-redux/ShopSelector\"\nimport { firestore, ConverCollectionsSnapshotMap } from \"../../FireBase/Firebase-util\"\nimport { connect } from \"react-redux\"\nimport { FetchCollectionStartAsync } from \"../../redux/Shop-redux/ShopAction\"\nimport Spinner from \"../../Components/Spinner-Component/Spinner\"\n\n\nconst CollectionOverViewWithSpinner = Spinner(CollectionOverView);\nconst CollectionPageWithSpinner = Spinner(CollectionPage)\n\n\nclass  Shop extends Component {\n\n\n  componentDidMount(){\nconst {FetchCollectionStartAsync} = this.props\n\nFetchCollectionStartAsync()\n\n  }\n\n\n render(){\nconst {match} = this.props\nconst {isCollectionFetching} = this.state\n\n  return(\n\n    <div className='shop-page'>\n    <Route exact path={`${match.path}`} render={(props) => <CollectionOverViewWithSpinner isLoading={isCollectionFetching}{...props}/>} />\n    <Route path={`${match.path}/:collectionId`} render={(props)=><CollectionPageWithSpinner isLoading={isCollectionFetching}{...props}/>} />\n  </div>\n    )\n   \n }\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: SelectIsCollectionFetching\n})\n  \nconst mapDispatchToProps = dispatch =>({\n  FetchCollectionStartAsync: () =>dispatch(FetchCollectionStartAsync())\n}\n\n)\n\n\n    \n\nexport default connect(mapStateToProps, mapDispatchToProps) (Shop)"]},"metadata":{},"sourceType":"module"}