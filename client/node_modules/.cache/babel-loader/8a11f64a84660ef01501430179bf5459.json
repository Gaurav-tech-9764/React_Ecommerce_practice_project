{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.CartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], CartItems => CartItems.reduce((accumalator, CartItems) => accumalator + CartItems.quantity * CartItems.price, 0));","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Cart/CartSelector.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","CartItems","selectCartHidden","hidden","selectCartItemCount","cartItems","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","accumalator","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAGA,OAAO,MAAMC,eAAe,GAAIJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACE,SAF6B,CAAvC;AAMP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKH,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAC7C,CAACI,eAAD,CAD6C,EAE7CK,SAAS,IACPA,SAAS,CAACC,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAH2C,CAA1C;AAUX,OAAO,MAAMC,eAAe,GAAGd,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACK,MAAV,CAAiB,CAACK,WAAD,EAAcV,SAAd,KAA2BU,WAAW,GAAGV,SAAS,CAACQ,QAAV,GAAqBR,SAAS,CAACW,KAAzF,EAAgG,CAAhG,CAF4B,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\n\nexport const selectCartItems =  createSelector(\n    [selectCart],\n    cart => cart.CartItems\n)\n\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n    )\n\n    export const selectCartItemCount = createSelector(\n        [selectCartItems],\n        cartItems =>\n          cartItems.reduce(\n            (accumalatedQuantity, cartItem) =>\n              accumalatedQuantity + cartItem.quantity,\n            0\n          )\n      );\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    CartItems => CartItems.reduce((accumalator, CartItems)=> accumalator + CartItems.quantity * CartItems.price, 0 )\n\n)"]},"metadata":{},"sourceType":"module"}