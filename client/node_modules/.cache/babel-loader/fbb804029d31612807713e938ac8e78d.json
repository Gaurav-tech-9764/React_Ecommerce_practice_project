{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { GoogleProvider, auth, createUserProfileDocument } from \"../../FireBase/Firebase-util\";\nimport { EmailSignInFailure, EmailSignInSuccess, GoogleSignInFailure, GoogleSignInSuccess } from \"./UserAction\";\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, GoogleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(GoogleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(GoogleSignInFailure(error));\n  }\n}\n_c = SignInWithGoogle;\nexport function* SignInWithEmailAndPassword({\n  payload: email,\n  password\n}) {\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(EmailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(EmailSignInFailure(error));\n  }\n}\n_c2 = SignInWithEmailAndPassword;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* onEmailSignInstart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmailAndPassword);\n}\nexport function* UserSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInstart)]);\n}\n_c3 = UserSagas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignInWithGoogle\");\n$RefreshReg$(_c2, \"SignInWithEmailAndPassword\");\n$RefreshReg$(_c3, \"UserSagas\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/User/UserSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInWithPopup","signInWithEmailAndPassword","GoogleProvider","auth","createUserProfileDocument","EmailSignInFailure","EmailSignInSuccess","GoogleSignInFailure","GoogleSignInSuccess","SignInWithGoogle","user","userRef","userSnapshot","get","id","data","error","SignInWithEmailAndPassword","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInstart","EMAIL_SIGN_IN_START","UserSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,0BAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,SAAQC,0BAAR,QAA0C,eAA1C;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,8BAAhE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,mBAAjD,EAAsEC,mBAAtE,QAAiG,cAAjG;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAEC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMV,eAAe,CAACG,IAAD,EAAOD,cAAP,CAApC;AACA,UAAMS,OAAO,GAAG,MAAMb,IAAI,CAACM,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACLY,mBAAmB,CAAC;AAACM,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CADd,CAAT;AAKH,GAVD,CAWA,OAAMC,KAAN,EAAY;AACR,UAAMpB,GAAG,CACLW,mBAAmB,CAACS,KAAD,CADd,CAAT;AAIH;AAGJ;KApBgBP,gB;AAsBjB,OAAO,UAAUQ,0BAAV,CAAqC;AAACC,EAAAA,OAAO,EAAEC,KAAV;AAAkBC,EAAAA;AAAlB,CAArC,EAAiE;AACpE,MAAG;AACC,UAAM;AAACV,MAAAA;AAAD,QAAS,MAAMT,0BAA0B,CAAEE,IAAF,EAC3CgB,KAD2C,EAE3CC,QAF2C,CAA/C;AAGA,UAAMT,OAAO,GAAG,MAAMb,IAAI,CAACM,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACLU,kBAAkB,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CADb,CAAT;AAKH,GAXD,CAWC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACS,kBAAkB,CAACW,KAAD,CAAnB,CAAT;AACH;AACJ;MAfgBC,0B;AAiBjB,OAAO,UAAUI,mBAAV,GAA+B;AAElC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCb,gBAAvC,CAAhB;AAEH;AAED,OAAO,UAAUc,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCP,0BAAtC,CAAhB;AACH;AAED,OAAO,UAAUQ,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH;MAFgBE,S","sourcesContent":["import { takeLatest, put, all, call} from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport {signInWithPopup} from \"firebase/auth\";\nimport {signInWithEmailAndPassword } from \"firebase/auth\"\n\nimport { GoogleProvider, auth, createUserProfileDocument } from \"../../FireBase/Firebase-util\";\nimport { EmailSignInFailure, EmailSignInSuccess, GoogleSignInFailure, GoogleSignInSuccess } from \"./UserAction\";\n\nexport function* SignInWithGoogle(){\n    try{\n        \n        const {user} = yield signInWithPopup(auth, GoogleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            GoogleSignInSuccess({id:userSnapshot.id, ...userSnapshot.data()})\n        )\n        \n\n    }\n    catch(error){\n        yield put(\n            GoogleSignInFailure(error)\n        )\n\n    }\n\n\n}\n\nexport function* SignInWithEmailAndPassword({payload: email , password}){\n    try{\n        const {user} = yield signInWithEmailAndPassword( auth,\n            email,\n            password)\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            EmailSignInSuccess({id:userSnapshot.id, ...userSnapshot.data()})\n        )\n        \n\n    }catch(error){\n        yield put(EmailSignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle)\n\n}\n\nexport function* onEmailSignInstart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmailAndPassword )\n}\n\nexport function* UserSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInstart)])\n}"]},"metadata":{},"sourceType":"module"}