{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nimport { FetchCollectionSuccess, FetchCollectionFailure } from './ShopAction';\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapShot => {\n    const CollectionMap = ConverCollectionsSnapshotMap(snapShot);\n    dispatch(FetchCollectionSuccess(CollectionMap));\n  }).catch(error => dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n  );\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeEvery","ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","get","then","snapShot","CollectionMap","dispatch","catch","error","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,SAASC,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,sBAAhC,QAA6D,cAA7D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,QAAMC,aAAa,GAAEL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB;AAIAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,UAAMC,aAAa,GAACX,4BAA4B,CAACU,QAAD,CAAhD;AACAE,IAAAA,QAAQ,CAACT,sBAAsB,CAACQ,aAAD,CAAvB,CAAR;AACF,GAHF,EAGIE,KAHJ,CAGUC,KAAK,IAAEF,QAAQ,CAACR,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAHzB,CAGiE;AAHjE;AAKH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMjB,SAAS,CAACG,eAAe,CAACe,sBAAjB,EAAyCZ,oBAAzC,CAAf;AACJ","sourcesContent":["import {takeEvery} from 'redux-saga/effects'\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\nimport {FetchCollectionSuccess, FetchCollectionFailure} from './ShopAction'\n\n\nexport function* fetchCollectionAsync(){\n\n    const collectionRef =firestore.collection('collections');\n\n\n\n    collectionRef.get().then( snapShot => {\n        const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n        dispatch(FetchCollectionSuccess(CollectionMap));\n     }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n     )\n}\n\nexport function* fetchCollectionStart(){\n     yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}