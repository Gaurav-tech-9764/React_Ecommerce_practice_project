{"ast":null,"code":"import { ConverCollectionsSnapshotMap, firestore } from \"../../FireBase/Firebase-util\";\nimport ShopActionTypes from \"./ShopTypes\";\nexport const FetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\n_c = FetchCollectionStart;\nexport const FetchCollectionSuccess = CollectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: CollectionMap\n});\n_c2 = FetchCollectionSuccess;\nexport const FetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(FetchCollectionStart()); //Dispatch the Start Function as event is start\n\n    collectionRef.get().then(snapShot => {\n      const CollectionMap = ConverCollectionsSnapshotMap(snapShot);\n      dispatch(FetchCollectionSuccess(CollectionMap));\n    }).catch(error => dispatch(FetchCollectionFailure(error)));\n  };\n};\n_c3 = FetchCollectionStartAsync;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FetchCollectionStart\");\n$RefreshReg$(_c2, \"FetchCollectionSuccess\");\n$RefreshReg$(_c3, \"FetchCollectionStartAsync\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopAction.js"],"names":["ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionStart","type","FETCH_COLLECTION_START","FetchCollectionSuccess","CollectionMap","FETCH_COLLECTION_SUCCESS","payload","FetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapShot","catch","error","FetchCollectionFailure"],"mappings":"AAAA,SAASA,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAM;AAEtCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AAFgB,CAAN,CAA7B;KAAMF,oB;AAMb,OAAO,MAAMG,sBAAsB,GAAIC,aAAD,KAAoB;AACtDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,wBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAApB,CAA/B;MAAMD,sB;AAKb,OAAO,MAAMI,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAG;AAEd,UAAMC,aAAa,GAAEX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAArB;AAEAF,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR,CAJc,CAIqB;;AAEnCS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,YAAMT,aAAa,GAACP,4BAA4B,CAACgB,QAAD,CAAhD;AACAL,MAAAA,QAAQ,CAACL,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AACF,KAHF,EAGIU,KAHJ,CAGUC,KAAK,IAAEP,QAAQ,CAACQ,sBAAsB,CAACD,KAAD,CAAvB,CAHzB;AAOH,GAbD;AAcH,CAfM;MAAMR,yB","sourcesContent":["import { ConverCollectionsSnapshotMap, firestore } from \"../../FireBase/Firebase-util\";\nimport ShopActionTypes from \"./ShopTypes\";\n\nexport const FetchCollectionStart = () =>({\n\n    type: ShopActionTypes.FETCH_COLLECTION_START,\n    \n})\n\nexport const FetchCollectionSuccess = (CollectionMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n    payload: CollectionMap\n})\n\nexport const FetchCollectionStartAsync = () => {\n    return dispatch =>{\n\n        const collectionRef =firestore.collection('collections');\n\n        dispatch(FetchCollectionStart());  //Dispatch the Start Function as event is start\n\n        collectionRef.get().then( snapShot => {\n            const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n            dispatch(FetchCollectionSuccess(CollectionMap));\n         }).catch(error=>dispatch(FetchCollectionFailure(error))\n         )\n  \n\n    }\n}"]},"metadata":{},"sourceType":"module"}