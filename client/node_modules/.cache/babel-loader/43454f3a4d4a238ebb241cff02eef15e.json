{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nimport { FetchCollectionSuccess, FetchCollectionFailure } from './ShopAction';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = collectionRef.get(); //geting the snaphot of collection\n\n    const CollectionMap = call(ConverCollectionsSnapshotMap, snapShot);\n    put(FetchCollectionSuccess(CollectionMap)); //Dispatch methoid in saga\n  } catch (error) {\n    put(FetchCollectionFailure(error.message));\n  } // collectionRef.get().then( snapShot => {\n  //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n  //     dispatch(FetchCollectionSuccess(CollectionMap));\n  //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n  //  )\n\n}\nexport function* fetchCollectionStart() {\n  takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeEvery","call","put","ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","snapShot","get","CollectionMap","error","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,SAASC,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,sBAAhC,QAA6D,cAA7D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAG;AAEC,UAAMC,aAAa,GAAEL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB;AACA,UAAMC,QAAQ,GAAIF,aAAa,CAACG,GAAd,EAAlB,CAHD,CAGwC;;AACvC,UAAMC,aAAa,GAAIZ,IAAI,CAACE,4BAAD,EAA+BQ,QAA/B,CAA3B;AACCT,IAAAA,GAAG,CAACI,sBAAsB,CAACO,aAAD,CAAvB,CAAH,CALF,CAK+C;AACjD,GAND,CAOJ,OAAMC,KAAN,EAAY;AAEPZ,IAAAA,GAAG,CAACK,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAH;AAEJ,GAbsC,CAenC;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACjChB,EAAAA,SAAS,CAACK,eAAe,CAACY,sBAAjB,EAAyCT,oBAAzC,CAAT;AACL","sourcesContent":["import {takeEvery ,call, put} from 'redux-saga/effects'\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\nimport {FetchCollectionSuccess, FetchCollectionFailure} from './ShopAction'\n\n\nexport function* fetchCollectionAsync(){\n\n    try{\n\n        const collectionRef =firestore.collection('collections');\n        const snapShot =  collectionRef.get()  //geting the snaphot of collection\n        const CollectionMap =  call(ConverCollectionsSnapshotMap, snapShot )\n         put(FetchCollectionSuccess(CollectionMap));  //Dispatch methoid in saga\n    }\ncatch(error){\n\n     put(FetchCollectionFailure(error.message))\n\n}\n  \n    // collectionRef.get().then( snapShot => {\n    //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n    //     dispatch(FetchCollectionSuccess(CollectionMap));\n    //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n    //  )\n}\n\nexport function* fetchCollectionStart(){\n      takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}