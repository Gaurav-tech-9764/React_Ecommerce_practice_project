{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nimport { FetchCollectionSuccess, FetchCollectionFailure } from './ShopAction';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get(); //geting the snaphot of collection\n\n    const CollectionMap = yield call(ConverCollectionsSnapshotMap, snapShot);\n    yield put;\n  } catch (error) {} // collectionRef.get().then( snapShot => {\n  //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n  //     dispatch(FetchCollectionSuccess(CollectionMap));\n  //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n  //  )\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeEvery","call","ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","snapShot","get","CollectionMap","put","error","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,SAASC,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,sBAAhC,QAA6D,cAA7D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAG;AAEC,UAAMC,aAAa,GAAEL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAHD,CAG6C;;AAC5C,UAAMC,aAAa,GAAG,MAAMX,IAAI,CAACC,4BAAD,EAA+BQ,QAA/B,CAAhC;AACA,UAAMG,GAAN;AACH,GAND,CAOJ,OAAMC,KAAN,EAAY,CAEX,CAXsC,CAanC;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMf,SAAS,CAACI,eAAe,CAACY,sBAAjB,EAAyCT,oBAAzC,CAAf;AACJ","sourcesContent":["import {takeEvery ,call} from 'redux-saga/effects'\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\nimport {FetchCollectionSuccess, FetchCollectionFailure} from './ShopAction'\n\n\nexport function* fetchCollectionAsync(){\n\n    try{\n\n        const collectionRef =firestore.collection('collections');\n        const snapShot = yield collectionRef.get()  //geting the snaphot of collection\n        const CollectionMap = yield call(ConverCollectionsSnapshotMap, snapShot )\n        yield put\n    }\ncatch(error){\n\n}\n  \n    // collectionRef.get().then( snapShot => {\n    //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n    //     dispatch(FetchCollectionSuccess(CollectionMap));\n    //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n    //  )\n}\n\nexport function* fetchCollectionStart(){\n     yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}