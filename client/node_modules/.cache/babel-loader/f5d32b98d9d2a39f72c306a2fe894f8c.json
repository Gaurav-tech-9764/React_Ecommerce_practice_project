{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-up/Sign-up.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport \"./Sign-up.Style.scss\";\nimport { connect } from \"react-redux\";\nimport { SignUpStart } from \"../../redux/User/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [UserDetails, setUserDetails] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    ConfirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    ConfirmPassword\n  } = UserDetails;\n\n  const handelSubmit = async event => {\n    event.preventDefault();\n\n    if (password != ConfirmPassword) {\n      alert(\"Password Donn`t Match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handelchange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserDetails({ ...UserDetails,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do Not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handelSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handelchange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handelchange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handelchange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"ConfirmPassword\",\n        value: ConfirmPassword,\n        onChange: handelchange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"y3l7QXTU2eyDiAVx2r111Unuv0I=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(SignUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-up/Sign-up.js"],"names":["React","Component","useState","FormInput","CustomButton","connect","SignUpStart","SignUp","signUpStart","UserDetails","setUserDetails","displayName","email","password","ConfirmPassword","handelSubmit","event","preventDefault","alert","handelchange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAE;AAC5CS,IAAAA,WAAW,EAAC,EADgC;AAE5CC,IAAAA,KAAK,EAAC,EAFsC;AAG5CC,IAAAA,QAAQ,EAAC,EAHmC;AAI5CC,IAAAA,eAAe,EAAC;AAJ4B,GAAF,CAA9C;AASA,QAAM;AAACH,IAAAA,WAAD;AAAaC,IAAAA,KAAb;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA;AAA5B,MAA+CL,WAArD;;AAEE,QAAOM,YAAY,GAAG,MAAMC,KAAN,IAAc;AAE9BA,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAGJ,QAAQ,IAAIC,eAAf,EAA+B;AAC3BI,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACH;;AACDV,IAAAA,WAAW,CAAC;AAACG,MAAAA,WAAD;AAAcC,MAAAA,KAAd;AAAoBC,MAAAA;AAApB,KAAD,CAAX;AAGP,GAZC;;AAcA,QAAOM,YAAY,GAAGH,KAAK,IAAI;AACzB,UAAM;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBL,KAAK,CAACM,MAA5B;AACAZ,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAgB,OAACW,IAAD,GAASC;AAAzB,KAAD,CAAd;AACH,GAHH;;AAMM,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEN,YAAzC;AAAA,8BACA,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,QAAA,KAAK,EAAEJ,WAHX;AAII,QAAA,QAAQ,EAAEQ,YAJd;AAKI,QAAA,KAAK,EAAC,cALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cADA,eAUA,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEP,KAHX;AAII,QAAA,QAAQ,EAAEO,YAJd;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cAVA,eAkBC,QAAC,SAAD;AACG,QAAA,IAAI,EAAC,UADR;AAEG,QAAA,IAAI,EAAC,UAFR;AAGG,QAAA,KAAK,EAAEN,QAHV;AAIG,QAAA,QAAQ,EAAEM,YAJb;AAKG,QAAA,KAAK,EAAC,UALT;AAMG,QAAA,QAAQ;AANX;AAAA;AAAA;AAAA;AAAA,cAlBD,eA2BA,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,KAAK,EAAEL,eAHX;AAII,QAAA,QAAQ,EAAEK,YAJd;AAKI,QAAA,KAAK,EAAC,kBALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cA3BA,eAoCG,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmDP,CApFD;;GAAMZ,M;;KAAAA,M;;AAuFN,MAAMgB,kBAAkB,GAAGC,QAAD,KAAa;AACnChB,EAAAA,WAAW,EAAEiB,eAAe,IAAID,QAAQ,CAAClB,WAAW,CAACmB,eAAD,CAAZ;AADL,CAAb,CAA1B;;AAGA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAmChB,MAAnC,CAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport FormInput from \"../Form-Input/Form-Input\";\n\nimport CustomButton from \"../custom-button/CustomButton\";\n\nimport \"./Sign-up.Style.scss\";\nimport { connect } from \"react-redux\";\nimport { SignUpStart } from \"../../redux/User/UserAction\";\n\n\nconst SignUp = ({signUpStart}) => {\n   \nconst [UserDetails, setUserDetails] = useState( { \n    displayName:'',\n    email:'',\n    password:'',\n    ConfirmPassword:''\n})\n        \n        \n   \nconst {displayName,email,password,ConfirmPassword} = UserDetails \n\n  const  handelSubmit = async event =>{\n\n        event.preventDefault();\n    \n\n        if(password != ConfirmPassword){\n            alert(\"Password Donn`t Match\");\n            return;\n        }\n        signUpStart({displayName, email,password})\n\n         \n};\n\n  const  handelchange = event => {\n        const {name, value} = event.target;\n        setUserDetails({...UserDetails,[name] : value})\n    };\n   \n       \n        return(\n\n            <div className=\"sign-in\">\n                <h2 className=\"title\">I do Not have a account</h2>\n                <span>Sign up with your email and password</span>\n                <form className=\"sign-up-form\" onSubmit={handelSubmit}>\n                <FormInput\n                    type=\"text\"\n                    name=\"displayName\"\n                    value={displayName} \n                    onChange={handelchange}\n                    label=\"Display Name\"\n                    required\n                />\n\n                <FormInput \n                    type=\"email\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handelchange}\n                    label=\"Email\" \n                    required \n                />\n                 <FormInput \n                    type=\"password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={handelchange}\n                    label=\"Password\" \n                    required \n\n                 />\n                <FormInput \n                    type=\"password\" \n                    name=\"ConfirmPassword\" \n                    value={ConfirmPassword} \n                    onChange={handelchange}\n                    label=\"Confirm Password\" \n                    required \n\n                />\n                   <CustomButton type=\"submit\">SIGN UP</CustomButton>\n                    \n                </form>\n            </div>\n\n        )\n\n\n\n\n}\n\n\nconst mapDispatchToProps= (dispatch)=>({\n    signUpStart: userCredentials => dispatch(SignUpStart(userCredentials))\n})\nexport default connect(null, mapDispatchToProps) (SignUp)"]},"metadata":{},"sourceType":"module"}