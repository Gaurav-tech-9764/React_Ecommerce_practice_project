{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport { signInWithPopup, signOut } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { GoogleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../FireBase/Firebase-util\";\nimport { SignInFailure, SignInSuccess, SignOutFailure, SignOutSuccess } from \"./UserAction\";\nexport function* getSnapShotForUser(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, GoogleProvider);\n    yield getSnapShotForUser(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c = SignInWithGoogle;\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotForUser(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c2 = SignInWithEmail;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotForUser(userAuth);\n  } catch (error) {}\n}\nexport function* SignOut() {\n  try {\n    yield signOut(auth);\n    yield put(SignOutSuccess);\n  } catch (error) {\n    yield put(SignOutFailure(error));\n  }\n}\n_c3 = SignOut;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* onEmailSignInstart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, SignOut);\n}\nexport function* UserSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInstart), call(onCheckUserSession)]);\n}\n_c4 = UserSagas;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignInWithGoogle\");\n$RefreshReg$(_c2, \"SignInWithEmail\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"UserSagas\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/User/UserSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInWithPopup","signOut","signInWithEmailAndPassword","GoogleProvider","auth","createUserProfileDocument","getCurrentUser","SignInFailure","SignInSuccess","SignOutFailure","SignOutSuccess","getSnapShotForUser","userAuth","userRef","userSnapshot","get","id","data","error","SignInWithGoogle","user","SignInWithEmail","payload","email","password","isUserAuthenticated","SignOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInstart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","UserSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,0BAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,QAAwC,eAAxC;AACA,SAAQC,0BAAR,QAA0C,eAA1C;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,EAAyDC,cAAzD,QAA+E,8BAA/E;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,QAA6E,cAA7E;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,QAA7B,EAAsC;AACzC,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACO,yBAAD,EAA4BO,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACIY,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CADjB,CAAT;AAGC,GANL,CAOA,OAAMC,KAAN,EAAY;AACA,UAAMtB,GAAG,CACIW,aAAa,CAACW,KAAD,CADjB,CAAT;AAGC;AACZ;AAEL,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAEC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMpB,eAAe,CAACI,IAAD,EAAOD,cAAP,CAApC;AACK,UAAMQ,kBAAkB,CAACS,IAAD,CAAxB;AAEJ,GALL,CAMA,OAAMF,KAAN,EAAY;AACH,UAAMtB,GAAG,CACEW,aAAa,CAACW,KAAD,CADf,CAAT;AAGI;AACZ;KAZYC,gB;AAcjB,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAAwD;AAC3D,MAAG;AACC,UAAM;AAACJ,MAAAA;AAAD,QAAS,MAAMlB,0BAA0B,CAAEE,IAAF,EAAQmB,KAAR,EAAcC,QAAd,CAA/C;AACI,UAAMb,kBAAkB,CAACS,IAAD,CAAxB;AAEP,GAJD,CAKA,OAAMF,KAAN,EAAY;AACA,UAAMtB,GAAG,CAACW,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACR;MATYG,e;AAWjB,OAAO,UAAUI,mBAAV,GAA+B;AAElC,MAAG;AACC,UAAMb,QAAQ,GAAG,MAAMN,cAAc,EAArC;AACJ,QAAG,CAACM,QAAJ,EACA;AACA,UAAMD,kBAAkB,CAACC,QAAD,CAAxB;AAEC,GAND,CAMC,OAAMM,KAAN,EAAY,CAEZ;AAEJ;AAED,OAAO,UAAUQ,OAAV,GAAmB;AACtB,MAAG;AACC,UAAMzB,OAAO,CAACG,IAAD,CAAb;AACA,UAAMR,GAAG,CAACc,cAAD,CAAT;AACH,GAHD,CAGC,OAAMQ,KAAN,EAAY;AACT,UAAMtB,GAAG,CAAEa,cAAc,CAACS,KAAD,CAAhB,CAAT;AACH;AACJ;MAPgBQ,O;AASjB,OAAO,UAAUC,mBAAV,GAA+B;AAElC,QAAMhC,UAAU,CAACI,eAAe,CAAC6B,oBAAjB,EAAuCT,gBAAvC,CAAhB;AAEH;AAED,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAMlC,UAAU,CAACI,eAAe,CAAC+B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAMpC,UAAU,CAACI,eAAe,CAACiC,kBAAjB,EAAqCP,mBAArC,CAAhB;AACH;AAGD,OAAO,UAAUQ,cAAV,GAA0B;AAC7B,QAAMtC,UAAU,CAACI,eAAe,CAACmC,cAAjB,EAAiCR,OAAjC,CAAhB;AACH;AAGD,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAMtC,GAAG,CAAC,CAACC,IAAI,CAAC6B,mBAAD,CAAL,EAA4B7B,IAAI,CAAC+B,kBAAD,CAAhC,EAAsD/B,IAAI,CAACiC,kBAAD,CAA1D,CAAD,CAAT;AACH;MAFgBI,S","sourcesContent":["import { takeLatest, put, all, call} from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport {signInWithPopup, signOut } from \"firebase/auth\";\nimport {signInWithEmailAndPassword } from \"firebase/auth\"\n\nimport { GoogleProvider, auth, createUserProfileDocument,getCurrentUser } from \"../../FireBase/Firebase-util\";\nimport { SignInFailure, SignInSuccess, SignOutFailure, SignOutSuccess } from \"./UserAction\";\n\nexport function* getSnapShotForUser(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(\n                     SignInSuccess({id:userSnapshot.id, ...userSnapshot.data()})\n                 )\n        }\n    catch(error){\n                yield put(\n                             SignInFailure(error)\n                         )\n                }\n    }\n\nexport function* SignInWithGoogle(){\n    try{\n        \n        const {user} = yield signInWithPopup(auth, GoogleProvider);\n             yield getSnapShotForUser(user)\n\n        }\n    catch(error){\n             yield put(\n                        SignInFailure(error)\n                      )\n                }\n    }\n\nexport function* SignInWithEmail({payload: {email , password}}){\n    try{\n        const {user} = yield signInWithEmailAndPassword( auth, email,password)\n            yield getSnapShotForUser(user)\n\n    }\n    catch(error){\n                yield put(SignInFailure(error))\n            }\n    }\n\nexport function* isUserAuthenticated(){\n\n    try{\n        const userAuth = yield getCurrentUser();\n    if(!userAuth) \n    return;\n    yield getSnapShotForUser(userAuth)\n\n    }catch(error){\n\n    }\n\n}\n\nexport function* SignOut(){\n    try{\n        yield signOut(auth)\n        yield put(SignOutSuccess)\n    }catch(error){\n        yield put (SignOutFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle)\n\n}\n\nexport function* onEmailSignInstart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail )\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, SignOut)\n}\n\n\nexport function* UserSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInstart), call(onCheckUserSession)])\n}"]},"metadata":{},"sourceType":"module"}