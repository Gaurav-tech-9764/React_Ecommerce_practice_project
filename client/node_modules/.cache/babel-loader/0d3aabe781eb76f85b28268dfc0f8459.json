{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nimport { FetchCollectionSuccess, FetchCollectionFailure } from './ShopAction';\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection('collections'); // collectionRef.get().then( snapShot => {\n  //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n  //     dispatch(FetchCollectionSuccess(CollectionMap));\n  //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n  //  )\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeEvery","ConverCollectionsSnapshotMap","firestore","ShopActionTypes","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,SAASC,4BAAT,EAAuCC,SAAvC,QAAwD,8BAAxD;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,sBAAR,EAAgCC,sBAAhC,QAA6D,cAA7D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,QAAMC,aAAa,GAAEL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB,CAFmC,CAMnC;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMT,SAAS,CAACG,eAAe,CAACO,sBAAjB,EAAyCJ,oBAAzC,CAAf;AACJ","sourcesContent":["import {takeEvery} from 'redux-saga/effects'\nimport { ConverCollectionsSnapshotMap, firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\nimport {FetchCollectionSuccess, FetchCollectionFailure} from './ShopAction'\n\n\nexport function* fetchCollectionAsync(){\n\n    const collectionRef =firestore.collection('collections');\n\n\n\n    // collectionRef.get().then( snapShot => {\n    //     const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n    //     dispatch(FetchCollectionSuccess(CollectionMap));\n    //  }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n    //  )\n}\n\nexport function* fetchCollectionStart(){\n     yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}