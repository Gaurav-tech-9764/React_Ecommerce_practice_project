{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-In/SignIn.js\";\nimport react, { Component } from \"react\";\nimport CustomeButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport \"./SignIn.Styles.scss\";\nimport { connect } from \"react-redux\";\nimport { GoogleSignInStart, EmailSignInStart } from \"../../redux/User/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handelSubmit = async event => {\n      event.preventDefault();\n      const {\n        EmailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n    };\n\n    this.handelChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      googleSignInToStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handelSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          label: \"email\",\n          type: \"email\",\n          handelChange: this.handelChange,\n          value: this.state.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          label: \"password\",\n          type: \"password\",\n          handelChange: this.handelChange,\n          value: this.state.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(CustomeButton, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomeButton, {\n            type: \"button\",\n            onClick: googleSignInToStart,\n            isGoogleSignIn: true,\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInToStart: () => dispatch(GoogleSignInStart()),\n  EmailSignInStart: (email, password) => dispatch(EmailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/Components/Sign-In/SignIn.js"],"names":["react","Component","CustomeButton","FormInput","connect","GoogleSignInStart","EmailSignInStart","SignIn","constructor","props","handelSubmit","event","preventDefault","email","password","state","handelChange","value","name","target","setState","render","googleSignInToStart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import react, { Component } from \"react\";\nimport CustomeButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport \"./SignIn.Styles.scss\";\nimport { connect } from \"react-redux\";\nimport { GoogleSignInStart , EmailSignInStart} from \"../../redux/User/UserAction\";\n\n\n\nclass SignIn extends Component {\n \n    constructor(props){\n\n        super(props)\n\n        this.state={\n\n            email:\"\", \n            password:\"\"\n        }\n\n    }\n\n    handelSubmit = async event =>{\n     \n        event.preventDefault();\n        const {EmailSignInStart} = this.props\n        const {email, password} = this.state;\n\n\n\n      \n\n\n       \n    }\n    handelChange = (event) => {\n        const {value, name} = event.target;\n\n        this.setState({[name]:value});\n    }\n\n    render(){\n        const {googleSignInToStart} = this.props\n        return(\n\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handelSubmit}>\n                    <FormInput name=\"email\" label=\"email\" type=\"email\" handelChange={this.handelChange} value={this.state.email} required/>\n                   \n                    <FormInput name=\"password\" label=\"password\" type=\"password\" handelChange={this.handelChange} value={this.state.password} required/>\n                \n                    <div className=\"button\">\n\n                    <CustomeButton type=\"submit\">Sign In</CustomeButton>\n                    \n                    <CustomeButton type=\"button\" onClick={googleSignInToStart} isGoogleSignIn>Sign In With Google</CustomeButton>\n\n\n                    </div>\n                </form>\n            </div>\n\n        )\n\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInToStart: () => dispatch(GoogleSignInStart()),\n    EmailSignInStart:(email, password)=> dispatch(EmailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps) (SignIn)"]},"metadata":{},"sourceType":"module"}