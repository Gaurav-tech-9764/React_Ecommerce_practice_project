{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../../FireBase/Firebase-util';\nimport ShopActionTypes from './ShopTypes';\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapShot => {\n    const CollectionMap = ConverCollectionsSnapshotMap(snapShot);\n    dispatch(FetchCollectionSuccess(CollectionMap));\n  }).catch(error => dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n  );\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/Shop-redux/ShopSagas.js"],"names":["takeEvery","firestore","ShopActionTypes","fetchCollectionAsync","collectionRef","collection","get","then","snapShot","CollectionMap","ConverCollectionsSnapshotMap","dispatch","FetchCollectionSuccess","catch","error","FetchCollectionFailure","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,QAAMC,aAAa,GAAEH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAArB;AAIAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,UAAMC,aAAa,GAACC,4BAA4B,CAACF,QAAD,CAAhD;AACAG,IAAAA,QAAQ,CAACC,sBAAsB,CAACH,aAAD,CAAvB,CAAR;AACF,GAHF,EAGII,KAHJ,CAGUC,KAAK,IAAEH,QAAQ,CAACI,sBAAsB,CAACD,KAAK,CAACE,OAAP,CAAvB,CAHzB,CAGiE;AAHjE;AAKH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMjB,SAAS,CAACE,eAAe,CAACgB,sBAAjB,EAAyCf,oBAAzC,CAAf;AACJ","sourcesContent":["import {takeEvery} from 'redux-saga/effects'\nimport { firestore } from '../../FireBase/Firebase-util';\n\nimport ShopActionTypes from './ShopTypes'\n\n\nexport function* fetchCollectionAsync(){\n\n    const collectionRef =firestore.collection('collections');\n\n\n\n    collectionRef.get().then( snapShot => {\n        const CollectionMap=ConverCollectionsSnapshotMap(snapShot)\n        dispatch(FetchCollectionSuccess(CollectionMap));\n     }).catch(error=>dispatch(FetchCollectionFailure(error.message)) //dispatch failuer\n     )\n}\n\nexport function* fetchCollectionStart(){\n     yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync )\n}"]},"metadata":{},"sourceType":"module"}