{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/React_training/React_practice/clothing-ecommerce/src/pages/Shop/Shop.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionOverView from \"../../Components/Collection-Overview/CollectionOverView\";\nimport CollectionPage from \"../Collection/CollectionPage\";\nimport SelectIsCollectionFetching from \"../../redux/Shop-redux/ShopSelector\";\nimport { firestore, ConverCollectionsSnapshotMap } from \"../../FireBase/Firebase-util\";\nimport { connect } from \"react-redux\";\nimport { FetchCollectionStartAsync } from \"../../redux/Shop-redux/ShopAction\";\nimport Spinner from \"../../Components/Spinner-Component/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverViewWithSpinner = Spinner(CollectionOverView);\n_c = CollectionOverViewWithSpinner;\nconst CollectionPageWithSpinner = Spinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollection\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapShot => {\n      const CollectionMap = ConverCollectionsSnapshotMap(snapShot);\n      updateCollection(CollectionMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverViewWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverViewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/pages/Shop/Shop.js"],"names":["React","Component","Route","createStructuredSelector","CollectionOverView","CollectionPage","SelectIsCollectionFetching","firestore","ConverCollectionsSnapshotMap","connect","FetchCollectionStartAsync","Spinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","Shop","state","isLoading","unSubscribeFromSnapShot","componentDidMount","updateCollection","props","collectionRef","collection","get","then","snapShot","CollectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,0BAAP,MAAuC,qCAAvC;AACA,SAASC,SAAT,EAAoBC,4BAApB,QAAwD,8BAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,yBAAT,QAA0C,mCAA1C;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAGA,MAAMC,6BAA6B,GAAGD,OAAO,CAACP,kBAAD,CAA7C;KAAMQ,6B;AACN,MAAMC,yBAAyB,GAAGF,OAAO,CAACN,cAAD,CAAzC;MAAMQ,yB;;AAGN,MAAOC,IAAP,SAAoBb,SAApB,CAA8B;AAAA;AAAA;AAAA,SAG5Bc,KAH4B,GAGtB;AACJC,MAAAA,SAAS,EAAG;AADR,KAHsB;AAAA,SAO5BC,uBAP4B,GAOF,IAPE;AAAA;;AAS5BC,EAAAA,iBAAiB,GAAE;AAEjB,UAAM;AAACC,MAAAA;AAAD,QAAqB,KAAKC,KAAhC;AAEA,UAAMC,aAAa,GAAEd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAArB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAC1C,YAAMC,aAAa,GAAClB,4BAA4B,CAACiB,QAAD,CAAhD;AACAN,MAAAA,gBAAgB,CAACO,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAC;AAAX,OAAd;AACK,KAJD;AAOD;;AAGFY,EAAAA,MAAM,GAAE;AACT,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAc,KAAKD,KAAzB;AAEE,wBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGV,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEJ,SAA1C;AAAA,aAAwDI;AAAxD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGV,KAAD,iBAAS,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEJ,SAAtC;AAAA,aAAoDI;AAApD;AAAA;AAAA;AAAA;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAQA;;AArC4B;;AAwC9B,MAAMW,kBAAkB,GAAGC,QAAQ,KAAI;AACrCb,EAAAA,gBAAgB,EAAGc,aAAD,IAAkBD,QAAQ,CAACb,gBAAgB,CAACc,aAAD,CAAjB;AADP,CAAJ,CAAnC;;AASA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAmCjB,IAAnC,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport  {Route}  from \"react-router\"\nimport { createStructuredSelector } from \"reselect\"\nimport CollectionOverView from \"../../Components/Collection-Overview/CollectionOverView\"\nimport CollectionPage from \"../Collection/CollectionPage\"\nimport SelectIsCollectionFetching from \"../../redux/Shop-redux/ShopSelector\"\nimport { firestore, ConverCollectionsSnapshotMap } from \"../../FireBase/Firebase-util\"\nimport { connect } from \"react-redux\"\nimport { FetchCollectionStartAsync } from \"../../redux/Shop-redux/ShopAction\"\nimport Spinner from \"../../Components/Spinner-Component/Spinner\"\n\n\nconst CollectionOverViewWithSpinner = Spinner(CollectionOverView);\nconst CollectionPageWithSpinner = Spinner(CollectionPage)\n\n\nclass  Shop extends Component {\n\n\n  state={\n    isLoading : true \n   };\n\n  unSubscribeFromSnapShot = null;\n\n  componentDidMount(){\n\n    const {updateCollection} = this.props\n\n    const collectionRef =firestore.collection('collections');\n\n    collectionRef.get().then( snapShot => {\nconst CollectionMap=ConverCollectionsSnapshotMap(snapShot)\nupdateCollection(CollectionMap);\nthis.setState({isLoading:false})\n    } \n      )\n\n  }\n\n\n render(){\nconst {match} = this.props\nconst {isLoading} = this.state\n\n  return(\n\n    <div className='shop-page'>\n    <Route exact path={`${match.path}`} render={(props) => <CollectionOverViewWithSpinner isLoading={isLoading}{...props}/>} />\n    <Route path={`${match.path}/:collectionId`} render={(props)=><CollectionPageWithSpinner isLoading={isLoading}{...props}/>} />\n  </div>\n    )\n   \n }\n}\n  \nconst mapDispatchToProps = dispatch =>({\n  updateCollection: (collectionMap) =>dispatch(updateCollection(collectionMap))\n}\n\n)\n\n\n    \n\nexport default connect(null, mapDispatchToProps) (Shop)"]},"metadata":{},"sourceType":"module"}