{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { GoogleProvider, auth, createUserProfileDocument } from \"../../FireBase/Firebase-util\";\nimport { SignInFailure, SignInSuccess } from \"./UserAction\";\nexport function* getSnapShotForUser(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, GoogleProvider);\n    yield getSnapShotForUser(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c = SignInWithGoogle;\nexport function* SignInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotForUser(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n_c2 = SignInWithEmail;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle);\n}\nexport function* onEmailSignInstart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail);\n}\nexport function* UserSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInstart)]);\n}\n_c3 = UserSagas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignInWithGoogle\");\n$RefreshReg$(_c2, \"SignInWithEmail\");\n$RefreshReg$(_c3, \"UserSagas\");","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/redux/User/UserSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInWithPopup","signInWithEmailAndPassword","GoogleProvider","auth","createUserProfileDocument","SignInFailure","SignInSuccess","getSnapShotForUser","userAuth","userRef","userSnapshot","get","id","data","error","SignInWithGoogle","user","SignInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInstart","EMAIL_SIGN_IN_START","UserSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,0BAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,SAAQC,0BAAR,QAA0C,eAA1C;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,8BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,cAA7C;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,QAA7B,EAAsC;AACzC,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACM,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACIU,aAAa,CAAC;AAACM,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CADjB,CAAT;AAGC,GANL,CAOA,OAAMC,KAAN,EAAY;AACA,UAAMlB,GAAG,CACIS,aAAa,CAACS,KAAD,CADjB,CAAT;AAGC;AACZ;AAEL,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAEC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMhB,eAAe,CAACG,IAAD,EAAOD,cAAP,CAApC;AACK,UAAMK,kBAAkB,CAACS,IAAD,CAAxB;AAEJ,GALL,CAMA,OAAMF,KAAN,EAAY;AACH,UAAMlB,GAAG,CACES,aAAa,CAACS,KAAD,CADf,CAAT;AAGI;AACZ;KAZYC,gB;AAcjB,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAAwD;AAC3D,MAAG;AACC,UAAM;AAACJ,MAAAA;AAAD,QAAS,MAAMf,0BAA0B,CAAEE,IAAF,EAAQgB,KAAR,EAAcC,QAAd,CAA/C;AACI,UAAMb,kBAAkB,CAACS,IAAD,CAAxB;AAEP,GAJD,CAKA,OAAMF,KAAN,EAAY;AACA,UAAMlB,GAAG,CAACS,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACR;MATYG,e;AAWjB,OAAO,UAAUI,mBAAV,GAA+B;AAElC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCP,gBAAvC,CAAhB;AAEH;AAED,OAAO,UAAUQ,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUQ,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH;MAFgBE,S","sourcesContent":["import { takeLatest, put, all, call} from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./UserTypes\";\nimport {signInWithPopup} from \"firebase/auth\";\nimport {signInWithEmailAndPassword } from \"firebase/auth\"\n\nimport { GoogleProvider, auth, createUserProfileDocument } from \"../../FireBase/Firebase-util\";\nimport { SignInFailure, SignInSuccess } from \"./UserAction\";\n\nexport function* getSnapShotForUser(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(\n                     SignInSuccess({id:userSnapshot.id, ...userSnapshot.data()})\n                 )\n        }\n    catch(error){\n                yield put(\n                             SignInFailure(error)\n                         )\n                }\n    }\n\nexport function* SignInWithGoogle(){\n    try{\n        \n        const {user} = yield signInWithPopup(auth, GoogleProvider);\n             yield getSnapShotForUser(user)\n\n        }\n    catch(error){\n             yield put(\n                        SignInFailure(error)\n                      )\n                }\n    }\n\nexport function* SignInWithEmail({payload: {email , password}}){\n    try{\n        const {user} = yield signInWithEmailAndPassword( auth, email,password)\n            yield getSnapShotForUser(user)\n\n    }\n    catch(error){\n                yield put(SignInFailure(error))\n            }\n    }\n\nexport function* onGoogleSignInStart(){\n\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, SignInWithGoogle)\n\n}\n\nexport function* onEmailSignInstart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, SignInWithEmail )\n}\n\nexport function* UserSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInstart)])\n}"]},"metadata":{},"sourceType":"module"}