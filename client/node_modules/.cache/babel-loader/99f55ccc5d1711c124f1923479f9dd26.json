{"ast":null,"code":"import _regeneratorRuntime from\"/home/neosoft/React_training/React_practice/clothing-ecommerce/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/neosoft/React_training/React_practice/clothing-ecommerce/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/neosoft/React_training/React_practice/clothing-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/compat/app';import{getAuth}from\"firebase/auth\";import'firebase/firestore';import'firebase/compat/firestore';import{GoogleAuthProvider,signInWithPopup}from\"firebase/auth\";var config={apiKey:\"AIzaSyACf_prwK5btWgMqK6ZUXZLn7LvFXc1HTU\",authDomain:\"my-react-project-gaurav.firebaseapp.com\",projectId:\"my-react-project-gaurav\",storageBucket:\"my-react-project-gaurav.appspot.com\",messagingSenderId:\"98837160630\",appId:\"1:98837160630:web:0066a44cb97be683977c17\",measurementId:\"G-KL9J9CG40J\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"Users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"Error in Creating User\",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=getAuth();export var firestore=firebase.firestore();var provider=new GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return signInWithPopup(auth,provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar credential=GoogleAuthProvider.credentialFromResult(result);var token=credential.accessToken;// The signed-in user info.\nvar user=result.user;// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The AuthCredential type that was used.\nvar credential=GoogleAuthProvider.credentialFromError(error);// ...\n});};export default firebase;","map":{"version":3,"sources":["/home/neosoft/React_training/React_practice/clothing-ecommerce/src/FireBase/Firebase-util.js"],"names":["firebase","getAuth","GoogleAuthProvider","signInWithPopup","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","setCustomParameters","prompt","signInWithGoogle","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","credentialFromError"],"mappings":"+aAAA,MAAOA,CAAAA,QAAP,KAAqB,qBAArB,CACA,OAASC,OAAT,KAAwB,eAAxB,CACA,MAAO,oBAAP,CACA,MAAO,2BAAP,CACA,OAASC,kBAAT,CAA8BC,eAA9B,KAAoD,eAApD,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,yCAFD,CAGXC,SAAS,CAAE,yBAHA,CAIXC,aAAa,CAAE,qCAJJ,CAKXC,iBAAiB,CAAE,aALR,CAMXC,KAAK,CAAE,0CANI,CAOXC,aAAa,CAAE,cAPJ,CAAf,CAWE,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,sKAG/BD,QAH+B,iEAK7BE,OAL6B,CAKnBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EALmB,uBAMZH,CAAAA,OAAO,CAACI,GAAR,EANY,QAM7BC,QAN6B,kBAQ/BA,QAAQ,CAACC,MARsB,0BAUzBC,WAVyB,CAUHT,QAVG,CAUzBS,WAVyB,CAUZC,KAVY,CAUHV,QAVG,CAUZU,KAVY,CAY3BC,SAZ2B,CAYf,GAAIC,CAAAA,IAAJ,EAZe,wCAezBV,CAAAA,OAAO,CAACW,GAAR,gBACJJ,WAAW,CAAXA,WADI,CAEJC,KAAK,CAALA,KAFI,CAGJC,SAAS,CAATA,SAHI,EAIDV,cAJC,EAfyB,0FAuB/Ba,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAqC,YAAMC,OAA3C,EAvB+B,wCA4B5Bd,OA5B4B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAgCPZ,QAAQ,CAAC8B,aAAT,CAAuB1B,MAAvB,EAEA,MAAO,IAAM2B,CAAAA,IAAI,CAAG9B,OAAO,EAApB,CACP,MAAO,IAAMe,CAAAA,SAAS,CAAGhB,QAAQ,CAACgB,SAAT,EAAlB,CAEP,GAAMgB,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,kBAAJ,EAAjB,CAEA8B,QAAQ,CAACC,mBAAT,CAA6B,CAACC,MAAM,CAAE,gBAAT,CAA7B,EAGA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMhC,CAAAA,eAAe,CAAC4B,IAAD,CAAOC,QAAP,CAAf,CACrCI,IADqC,CAChC,SAACC,MAAD,CAAY,CAChB;AACA,GAAMC,CAAAA,UAAU,CAAGpC,kBAAkB,CAACqC,oBAAnB,CAAwCF,MAAxC,CAAnB,CACA,GAAMG,CAAAA,KAAK,CAAGF,UAAU,CAACG,WAAzB,CACA;AACA,GAAMC,CAAAA,IAAI,CAAGL,MAAM,CAACK,IAApB,CACA;AACD,CARqC,EAQnCC,KARmC,CAQ7B,SAACC,KAAD,CAAW,CAClB;AACA,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAxB,CACA,GAAMC,CAAAA,YAAY,CAAGH,KAAK,CAACf,OAA3B,CACA;AACA,GAAMN,CAAAA,KAAK,CAAGqB,KAAK,CAACrB,KAApB,CACA;AACA,GAAMe,CAAAA,UAAU,CAAGpC,kBAAkB,CAAC8C,mBAAnB,CAAuCJ,KAAvC,CAAnB,CACA;AACD,CAjBqC,CAAN,EAAzB,CAmBP,cAAe5C,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport { getAuth } from \"firebase/auth\";\nimport 'firebase/firestore' \nimport 'firebase/compat/firestore';\nimport { GoogleAuthProvider , signInWithPopup} from \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyACf_prwK5btWgMqK6ZUXZLn7LvFXc1HTU\",\n    authDomain: \"my-react-project-gaurav.firebaseapp.com\",\n    projectId: \"my-react-project-gaurav\",\n    storageBucket: \"my-react-project-gaurav.appspot.com\",\n    messagingSenderId: \"98837160630\",\n    appId: \"1:98837160630:web:0066a44cb97be683977c17\",\n    measurementId: \"G-KL9J9CG40J\"\n  };\n\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => \n  {\n\n        if(!userAuth) return;\n\n        const userRef = firestore.doc(`Users/${userAuth.uid}`);\n        const snapShot = await userRef.get();\n\n        if(!snapShot.exists){\n\n          const { displayName, email} = userAuth;\n          \n          const createdAt = new Date();\n\n          try{\n            await userRef.set({\n              displayName,\n              email,\n              createdAt,\n              ...additionalData\n            })\n          }\n          catch(error){\n            console.log(\"Error in Creating User\",error.message)\n\n          }\n\n        }\n        return userRef\n\n  };\n\n  firebase.initializeApp(config);\n\n  export const auth = getAuth();\n  export const firestore = firebase.firestore();\n\n  const provider = new GoogleAuthProvider();\n\n  provider.setCustomParameters({prompt: 'select_account'})\n\n  \n  export const signInWithGoogle = () => signInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}